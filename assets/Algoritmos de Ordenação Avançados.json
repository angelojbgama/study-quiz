[
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "O que é ordenação?",
    "answer": "Método de organizar um conjunto de objetos em uma ordem predefinida (ascendente ou descendente)",
    "tags": "conceitos"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "O que é chave de ordenação?",
    "answer": "Campo do item utilizado para comparação no processo de ordenação",
    "tags": "conceitos"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual a diferença entre ordenação interna e externa?",
    "answer": "Interna: dados cabem na memória principal. Externa: dados não cabem completamente na memória",
    "tags": "conceitos"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Como funciona o Bubble Sort?",
    "answer": "Compara elementos adjacentes e troca se estiverem fora de ordem, fazendo o maior 'subir' como bolha",
    "tags": "bubble-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual a complexidade do Bubble Sort?",
    "answer": "O(n²) no pior e caso médio, O(n) no melhor caso",
    "tags": "bubble-sort,complexidade"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Como funciona o Insertion Sort?",
    "answer": "Insere cada elemento em sua posição correta, como ordenar cartas na mão",
    "tags": "insertion-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual a complexidade do Insertion Sort?",
    "answer": "O(n²) no pior caso, O(n) no melhor caso quando já está ordenado",
    "tags": "insertion-sort,complexidade"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Como funciona o Selection Sort?",
    "answer": "Seleciona o menor elemento e troca com a primeira posição, repetindo para o restante",
    "tags": "selection-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual a complexidade do Selection Sort?",
    "answer": "O(n²) sempre, independente da ordem inicial dos elementos",
    "tags": "selection-sort,complexidade"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "O que é a técnica dividir para conquistar?",
    "answer": "Dividir o problema em subproblemas menores, resolver recursivamente e combinar as soluções",
    "tags": "conceitos,merge-sort,quick-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Como funciona o Merge Sort?",
    "answer": "Divide o vetor pela metade recursivamente até ter 1 elemento, depois intercala ordenando",
    "tags": "merge-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual a complexidade do Merge Sort?",
    "answer": "O(n log n) sempre, independente da ordem inicial",
    "tags": "merge-sort,complexidade"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual a desvantagem do Merge Sort?",
    "answer": "Gasto extra de memória para criar cópias do array durante a execução",
    "tags": "merge-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Quais são as três etapas do Merge Sort?",
    "answer": "Dividir (em subsequências), Conquistar (ordenar recursivamente), Combinar (intercalar)",
    "tags": "merge-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Como funciona o Quick Sort?",
    "answer": "Escolhe um pivô, particiona o vetor em elementos menores e maiores que o pivô, ordena recursivamente",
    "tags": "quick-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual a complexidade do Quick Sort no melhor caso?",
    "answer": "O(n log n) quando o particionamento produz duas regiões de tamanho n/2",
    "tags": "quick-sort,complexidade"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual a complexidade do Quick Sort no pior caso?",
    "answer": "O(n²) quando o particionamento produz uma região com n-1 elementos e outra com 1",
    "tags": "quick-sort,complexidade"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "O que é o pivô no Quick Sort?",
    "answer": "Elemento escolhido para particionar o vetor em valores menores e maiores",
    "tags": "quick-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Quem inventou o Quick Sort?",
    "answer": "Charles Antony Richard Hoare em 1960",
    "tags": "quick-sort,história"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Como funciona o Shell Sort?",
    "answer": "Ordena elementos distantes por um gap que diminui progressivamente até chegar a 1",
    "tags": "shell-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "De qual algoritmo o Shell Sort é derivado?",
    "answer": "Insertion Sort (ordenação por inserção)",
    "tags": "shell-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual a complexidade do Shell Sort?",
    "answer": "O(n^1.2) ou O(n^1.25) dependendo da sequência de incrementos",
    "tags": "shell-sort,complexidade"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Quem inventou o Shell Sort?",
    "answer": "Donald Shell, cientista da computação americano",
    "tags": "shell-sort,história"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual sequência de incrementos deve ser evitada no Shell Sort?",
    "answer": "Potências de 2, pois reduzem a eficiência do algoritmo",
    "tags": "shell-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual algoritmo é mais eficiente para grandes conjuntos de dados?",
    "answer": "Merge Sort ou Quick Sort (no caso médio), ambos O(n log n)",
    "tags": "comparação,complexidade"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual algoritmo é estável?",
    "answer": "Bubble Sort, Insertion Sort e Merge Sort mantêm ordem relativa de elementos iguais",
    "tags": "estabilidade"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "O que são sentinelas em algoritmos de ordenação?",
    "answer": "Elementos especiais que indicam o menor e maior valor possível, evitando verificações de limites",
    "tags": "shell-sort,otimização"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual a vantagem do Shell Sort?",
    "answer": "Ótima opção para arquivos de tamanho moderado com implementação simples",
    "tags": "shell-sort,vantagens"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual a desvantagem do Shell Sort?",
    "answer": "Tempo de execução sensível à ordem inicial e não é estável",
    "tags": "shell-sort,desvantagens"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Quantas comparações o Merge Sort faz em relação ao Quick Sort?",
    "answer": "No pior caso, faz 39% menos comparações que o Quick Sort no caso médio",
    "tags": "merge-sort,quick-sort,comparação"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "O que significa notação Big-O?",
    "answer": "Expressa como a complexidade de um algoritmo varia com o tamanho do problema",
    "tags": "complexidade,conceitos"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual a última regra para incrementos no Shell Sort?",
    "answer": "O último incremento deve ser sempre 1",
    "tags": "shell-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual a principal operação do procedimento partição no Quick Sort?",
    "answer": "Reorganizar o vetor com elementos menores à esquerda e maiores à direita do pivô",
    "tags": "quick-sort"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Por que o Insertion Sort é eficiente para listas quase ordenadas?",
    "answer": "Faz menos comparações e movimentações quando os elementos já estão parcialmente em ordem",
    "tags": "insertion-sort,otimização"
  },
  {
    "quiz": "Algoritmos de Ordenação",
    "question": "Qual algoritmo usa menos memória adicional?",
    "answer": "Bubble Sort, Selection Sort, Insertion Sort e Shell Sort usam O(1) de espaço extra",
    "tags": "memória,comparação"
  }
]