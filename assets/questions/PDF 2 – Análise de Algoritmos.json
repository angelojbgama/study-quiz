[
  {
    "quiz": "Análise de Algoritmos",
    "question": "O que significa dizer que um algoritmo é correto?",
    "answer": "Que ele resolve o problema proposto para todas as entradas válidas",
    "wrong1": "Que ele sempre executa em tempo constante",
    "wrong2": "Que ele compila sem erros em qualquer linguagem",
    "wrong3": "Que funciona apenas para alguns exemplos",
    "tags": "corretude",
    "explicacao": "Corretude (no sentido clássico) significa produzir a saída esperada para toda entrada válida; total corretude inclui também terminar."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "Um algoritmo incorreto pode parecer funcionar em alguns casos?",
    "answer": "Sim, mas ele falha em entradas específicas ou casos limites",
    "wrong1": "Não, se funcionar uma vez ele é correto",
    "wrong2": "Apenas se for O(1)",
    "wrong3": "Somente quando os dados estão ordenados",
    "tags": "corretude",
    "explicacao": "Falhas geralmente aparecem em corner cases; passar em alguns testes não garante corretude."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "O que se avalia na análise de algoritmos além da corretude?",
    "answer": "A eficiência em termos de tempo de execução e uso de memória",
    "wrong1": "Apenas a legibilidade do código",
    "wrong2": "Somente o consumo de memória",
    "wrong3": "Somente o tempo, nunca a memória",
    "tags": "conceitos",
    "explicacao": "Desempenho considera tempo e espaço; às vezes também I/O e complexidade de implementação."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "O que representa a notação O (Big-O)?",
    "answer": "O limite superior assintótico do crescimento de um algoritmo",
    "wrong1": "O limite inferior assintótico",
    "wrong2": "O tempo exato de execução",
    "wrong3": "A média exata de execuções",
    "tags": "notação",
    "explicacao": "Big-O dá um bound superior para entradas grandes, geralmente associado ao pior caso."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "O que representa a notação Ω (Ômega)?",
    "answer": "O limite inferior do crescimento de um algoritmo",
    "wrong1": "O limite superior do crescimento",
    "wrong2": "O crescimento exato",
    "wrong3": "A complexidade média",
    "tags": "notação",
    "explicacao": "Ω descreve um bound inferior: desempenho não pode ser melhor do que isso assintoticamente."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "O que representa a notação Θ (Teta)?",
    "answer": "O crescimento exato do algoritmo, limitando superior e inferior",
    "wrong1": "Apenas o limite superior",
    "wrong2": "Apenas o limite inferior",
    "wrong3": "Somente o caso médio",
    "tags": "notação",
    "explicacao": "Θ(f) significa Big-O e Big-Ω ao mesmo tempo, isto é, crescimento assintótico apertado."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "Qual é a simplificação de O(n + log n)?",
    "answer": "O(n)",
    "wrong1": "O(log n)",
    "wrong2": "O(n log n)",
    "wrong3": "O(n + log n) (não simplifica)",
    "tags": "pegadinha",
    "explicacao": "Para n grande, o termo dominante é n; termos menores são ignorados na análise assintótica."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "O que significa melhor caso na análise de algoritmos?",
    "answer": "O cenário mais favorável, onde o algoritmo executa mais rápido",
    "wrong1": "O cenário mais desfavorável",
    "wrong2": "A média das execuções",
    "wrong3": "O caso em que o algoritmo falha",
    "tags": "conceitos",
    "explicacao": "Melhor caso é típico quando a entrada já está na condição ideal para o algoritmo."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "O que significa pior caso na análise de algoritmos?",
    "answer": "O cenário mais desfavorável, onde o algoritmo executa mais lentamente",
    "wrong1": "O cenário mais favorável",
    "wrong2": "Sempre igual ao caso médio",
    "wrong3": "Quando a entrada é vazia",
    "tags": "conceitos",
    "explicacao": "Big-O frequentemente modela esse bound superior de custo/tempo para qualquer entrada."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "O que significa caso médio?",
    "answer": "O desempenho esperado do algoritmo em entradas típicas",
    "wrong1": "O mesmo que melhor caso",
    "wrong2": "O mesmo que pior caso",
    "wrong3": "O caso em que o tempo é constante",
    "tags": "conceitos",
    "explicacao": "Depende de um modelo probabilístico das entradas; pode divergir bastante do pior caso."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "Na busca binária, qual é o caso pior em termos de complexidade?",
    "answer": "O(log n)",
    "wrong1": "O(1)",
    "wrong2": "O(n)",
    "wrong3": "O(n log n)",
    "tags": "exemplo",
    "explicacao": "Cada comparação reduz o espaço de busca à metade, resultando em ~log₂ n passos."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "Na busca sequencial, qual é o caso pior em termos de complexidade?",
    "answer": "O(n)",
    "wrong1": "O(1)",
    "wrong2": "O(log n)",
    "wrong3": "O(n log n)",
    "tags": "exemplo",
    "explicacao": "No pior caso percorre-se todo o vetor até encontrar (ou não) o elemento."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "Qual a complexidade de um duplo loop aninhado até n?",
    "answer": "O(n²)",
    "wrong1": "O(n)",
    "wrong2": "O(log n)",
    "wrong3": "O(n log n)",
    "tags": "código",
    "explicacao": "Laços completos aninhados multiplicam o trabalho, levando a crescimento quadrático."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "Qual a complexidade de um loop que dobra a variável a cada iteração até n?",
    "answer": "O(log n)",
    "wrong1": "O(n)",
    "wrong2": "O(√n)",
    "wrong3": "O(n²)",
    "tags": "código",
    "explicacao": "Dobrar a variável reduz o número de iterações para aproximadamente log₂ n."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "Se um algoritmo tem um loop O(n) externo e um loop O(log n) interno, qual a complexidade?",
    "answer": "O(n log n)",
    "wrong1": "O(n)",
    "wrong2": "O(log n)",
    "wrong3": "O(n²)",
    "tags": "código",
    "explicacao": "Multiplicam-se as ordens: n * log n."
  },
  {
    "quiz": "Análise de Algoritmos",
    "question": "Se um algoritmo realiza sempre 100 operações, qual é sua complexidade?",
    "answer": "O(1)",
    "wrong1": "O(n)",
    "wrong2": "O(log n)",
    "wrong3": "O(n²)",
    "tags": "código",
    "explicacao": "Custo constante (independente de n) é modelado como O(1)."
  }
]
